!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class t{constructor(e,t,s,r,i){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteButtonClick=r,this._handleLikeButtonClick=i}_setCardImageListeners(){this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._cardImage)}))}_checkLiked(){this._isLiked&&this._likeButton.classList.add("card__like-button_active")}_toggleLike=()=>{this._isLiked=!this._isLiked,this._likeButton.classList.toggle("card__like-button_active")};_setLikeButtonListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButtonClick(this._id,this._isLiked,this._toggleLike)}))}_setTrashButtonListeners(){this._trashButton.addEventListener("click",(()=>{this._handleDeleteButtonClick(this._id)}))}createCard(){return this._cardElement=this._cardSelector.cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardDesc=this._cardElement.querySelector(".card__description"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._trashButton=this._cardElement.querySelector(".card__trash-button"),this._cardDesc.textContent=this._name,this._cardImage.src=this._link,this._cardImage.setAttribute("alt",this._name),this._cardElement.setAttribute("id",this._id),this._setCardImageListeners(),this._setLikeButtonListeners(),this._setTrashButtonListeners(),this._checkLiked(),this._cardElement}}class s{constructor(e,t){this._options=e,this._formElement=t,this._inputElements=Array.from(this._formElement.querySelectorAll(this._options.inputSelector)),this._submitButton=this._formElement.querySelector(this._options.submitButtonSelector),this._inputErrorClass=this._options.inputErrorClass,this._errorClass=this._options.errorClass,this._inactiveButtonClass=this._options.inactiveButtonClass}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputElements.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableFormButton():this.enableFormButton()}_setEventListeners(){this._toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableFormButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableFormButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetFormValidation(){this._inputElements.forEach((e=>{this._checkInputValidity(e)}))}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close-button"),this._handleEscClose=e=>{"Escape"===e.key&&this.close()}}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}open(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.classList.add("modal_opened")}close(){document.removeEventListener("keydown",this._handleEscClose),this._popupElement.classList.remove("modal_opened")}}class i extends r{constructor(e,t,s){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._popupFormInputs=this._popupElement.querySelectorAll(".modal__input"),this._popupButton=this._popupElement.querySelector(".modal__button"),this._handleFormSubmit=t,this._defaultButtonText=s,this._handleSubmitListener=e=>{e.preventDefault(),this._popupButton.textContent="Saving...";const t=this._getInputValues();this._handleFormSubmit(t).then((()=>{this.close()})).catch((e=>{console.error(e)})).finally((()=>{setTimeout((()=>{this._popupButton.textContent=this._defaultButtonText}),500)}))},this.setEventListeners()}_getInputValues(){const e={};return this._popupFormInputs.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._popupFormInputs.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._popupForm.addEventListener("submit",this._handleSubmitListener),super.setEventListeners()}}const n=new i("#avatar-modal",(function(e){const t=e.url;return b.patchAvatar(t).then((()=>{d.setUserAvatar(t)})).then((()=>{m.disableFormButton(),c.reset()})).catch((e=>(console.error(e),Promise.reject(`Error: ${e}`))))}),"Save"),o=new i("#edit-modal",(function(e){return b.patchUserInfo(e).then(d.setUserInfo(e)).catch((e=>(console.error(e),Promise.reject(`Error: ${e}`))))}),"Save"),a=new i("#add-modal",(function(e){const t={name:e.title,link:e.url};return b.postNewCard(t).then((e=>{L.addItem(k(e))})).then((()=>{E.disableFormButton(),_.reset()})).catch((e=>(console.error(e),Promise.reject(`Error: ${e}`))))}),"Save"),l=new i("#delete-modal",(function(){return b.deleteCard(v.id).then((()=>{let e=document.getElementById(v.id);e.remove(),e=null})).catch((e=>(console.error(e),Promise.reject(`Error: ${e}`))))}),"Yes"),h=new class extends r{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".modal__image"),this._popupDescription=this._popupElement.querySelector(".modal__image-footing")}open(e){let{name:t,link:s}=e;this._popupImage.src=s,this._popupImage.alt=`This is a picture of ${t}`,this._popupDescription.textContent=t,super.open()}}("#image-modal"),c=document.forms["avatar-form"],u=document.forms["profile-form"],_=document.forms["add-card-form"],d=new class{constructor(e){let{nameSelector:t,aboutSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._aboutElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._aboutElement.textContent=s}setUserAvatar(e){this._avatarElement.src=e}}({nameSelector:".profile__name",aboutSelector:".profile__description",avatarSelector:".profile__image"}),m=new s(e,c),p=new s(e,u),E=new s(e,_),v={id:""},b=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_request(e,t){return fetch(e,t).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_getUserAvatar(){return this._request(`${this._baseUrl}/users/me/avatar`,{headers:this._headers})}_getUserData(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}_getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}returnData(){return Promise.all([this._getUserData(),this._getInitialCards()])}patchUserInfo(e){let{name:t,about:s}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})})}patchAvatar(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}postNewCard(e){let{name:t,link:s}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}addLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}removeLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"3f4287cc-0267-4f84-80ed-88627a1cce84","Content-Type":"application/json"}});b.returnData().then((e=>{let[t,s]=e;d.setUserAvatar(t.avatar),d.setUserInfo(t),L.renderItems(s)})).catch((e=>{console.error(e)}));const f=document.querySelector("#card__template").content.firstElementChild,k=e=>new t(e,f,I,B,y).createCard(),L=new class{constructor(e,t){this._renderer=e,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}((e=>{const t=k(e);L.addItem(t)}),".gallery__cards"),S=document.querySelector(".profile__image-button"),g=document.querySelector(".profile__edit-button"),C=document.querySelector(".profile__add-button");function I(e){const t={name:e.alt,link:e.src};h.open(t)}function B(e){v.id=e,l.open()}function y(e,t,s){return v.id=e,t?b.removeLike(v.id).then((()=>{s()})).catch((e=>{console.error(e)})):b.addLike(v.id).then((()=>{s()})).catch((e=>{console.error(e)}))}h.setEventListeners(),p.enableValidation(),E.enableValidation(),m.enableValidation(),S.addEventListener("click",(function(){n.open()})),g.addEventListener("click",(function(){const e=d.getUserInfo();console.log(e),o.setInputValues(e),p.enableFormButton(),o.open()})),C.addEventListener("click",(function(){a.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,